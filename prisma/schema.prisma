// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id
  name         String
  email        String   @unique
  phone_number String
  password     String
  reset_token  String?
  birthdate    DateTime @db.Date
  description  String
  is_seller    Boolean
  cpf          String
  image        String?

  zip_code   String
  state      String
  city       String
  street     String
  number     Int
  complement String

  created_at DateTime

  ad      Ad[]
  Comment Comment[]
  Sold    Sold[]
}

model Image {
  id         String   @id
  cover      String
  image_1    String?
  image_2    String?
  image_3    String?
  image_4    String?
  image_5    String?
  ad         Ad       @relation(fields: [ad_id], references: [id], onDelete: Cascade)
  ad_id      String   @unique
  created_at DateTime

  @@map("images")
}

model Ad {
  id          String   @id
  brand       String
  model       String
  year        Int
  fuel        String
  km          Int
  color       String
  price       Float
  priceFIPE   Int
  description String
  is_sold     Boolean  @default(false)
  User        User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id     String
  created_at  DateTime

  Image   Image?
  Comment Comment[]
  Sold    Sold?

  @@map("ads")
}

model Comment {
  id         String   @id
  text       String   @db.Text
  ad         Ad       @relation(fields: [ad_id], references: [id], onDelete: Cascade)
  ad_id      String
  User       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
  created_at DateTime
  updated_at DateTime @updatedAt

  @@map("comments")
}

model Sold {
  id         String   @id
  ad         Ad       @relation(fields: [ad_id], references: [id], onDelete: Cascade)
  ad_id      String   @unique
  User       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
  created_at DateTime

  @@map("solds")
}
