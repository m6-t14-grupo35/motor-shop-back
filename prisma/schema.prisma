// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id
  name         String
  email        String    @unique
  phone_number String
  password     String
  reset_token  String?
  birthdate    DateTime  @db.Date
  description  String
  is_seller    Boolean
  cpf          String
  created_at   DateTime
  // udpated_ at DateTime @updatedAt
  ad           Ad[]
  Address      Address?
  Comment      Comment[]
}

model Image {
  id         String   @id
  cover      String
  image_1    String
  image_2    String
  image_3    String
  image_4    String
  image_5    String
  ad         Ad       @relation(fields: [ad_id], references: [id])
  ad_id      String   @unique
  created_at DateTime
  // udpated_at DateTime @updatedAt

  @@map("images")
}

enum Fuel {
  Gasolina
  Etanol
  Diesel
  GLP
  Hybrid
  Electric
}

model Ad {
  id          String    @id
  brand       String
  model       String
  year        Int
  fuel        String //Fuel
  km          Int
  color       String
  price       Float //Int //Decimal  @db.Decimal()
  priceFIPE   Int //Int //Decimal  @db.Decimal()
  description String
  is_sold     Boolean   @default(false)
  User        User      @relation(fields: [user_id], references: [id])
  user_id     String
  created_at  DateTime
  // udpated_ at DateTime @updatedAt
  // deleted_ at DateTime
  Image       Image?
  Comment     Comment[]

  @@map("ads")
}

model Address {
  id         String   @id
  zip_code   String
  state      String
  city       String
  street     String
  number     Int      
  complement String
  User       User     @relation(fields: [user_id], references: [id])
  user_id    String   @unique
  created_at DateTime
  // udpated_at DateTime @updatedAt

  @@map("addresses")
}

model Comment {
  id         String   @id
  text       String   @db.Text
  ad         Ad       @relation(fields: [ad_id], references: [id])
  ad_id      String   
  User       User     @relation(fields: [user_id], references: [id])
  user_id    String
  created_at DateTime 
  updated_at DateTime @updatedAt

  @@map("comments")
}
